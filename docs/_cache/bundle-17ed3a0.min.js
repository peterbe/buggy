/* static/js/md5.js */
var MD5=function(s){function L(k,d){return k<<d|k>>>32-d}function K(G,k){var I,d,F,H,x;F=G&2147483648;H=k&2147483648;I=G&1073741824;d=k&1073741824;x=(G&1073741823)+(k&1073741823);if(I&d){return x^2147483648^F^H}if(I|d){if(x&1073741824){return x^3221225472^F^H}else{return x^1073741824^F^H}}else{return x^F^H}}function r(d,F,k){return d&F|~d&k}function q(d,F,k){return d&k|F&~k}function p(d,F,k){return d^F^k}function n(d,F,k){return F^(d|~k)}function u(G,F,aa,Z,k,H,I){G=K(G,K(K(r(F,aa,Z),k),I));return K(L(G,H),F)}function f(G,F,aa,Z,k,H,I){G=K(G,K(K(q(F,aa,Z),k),I));return K(L(G,H),F)}function D(G,F,aa,Z,k,H,I){G=K(G,K(K(p(F,aa,Z),k),I));return K(L(G,H),F)}function t(G,F,aa,Z,k,H,I){G=K(G,K(K(n(F,aa,Z),k),I));return K(L(G,H),F)}function e(G){var Z;var F=G.length;var x=F+8;var k=(x-x%64)/64;var I=(k+1)*16;var aa=Array(I-1);var d=0;var H=0;while(H<F){Z=(H-H%4)/4;d=H%4*8;aa[Z]=aa[Z]|G.charCodeAt(H)<<d;H++}Z=(H-H%4)/4;d=H%4*8;aa[Z]=aa[Z]|128<<d;aa[I-2]=F<<3;aa[I-1]=F>>>29;return aa}function B(x){var k="",F="",G,d;for(d=0;d<=3;d++){G=x>>>d*8&255;F="0"+G.toString(16);k=k+F.substr(F.length-2,2)}return k}function J(k){k=k.replace(/rn/g,"n");var d="";for(var F=0;F<k.length;F++){var x=k.charCodeAt(F);if(x<128){d+=String.fromCharCode(x)}else{if(x>127&&x<2048){d+=String.fromCharCode(x>>6|192);d+=String.fromCharCode(x&63|128)}else{d+=String.fromCharCode(x>>12|224);d+=String.fromCharCode(x>>6&63|128);d+=String.fromCharCode(x&63|128)}}}return d}var C=Array();var P,h,E,v,g,Y,X,W,V;var S=7,Q=12,N=17,M=22;var A=5,z=9,y=14,w=20;var o=4,m=11,l=16,j=23;var U=6,T=10,R=15,O=21;s=J(s);C=e(s);Y=1732584193;X=4023233417;W=2562383102;V=271733878;for(P=0;P<C.length;P+=16){h=Y;E=X;v=W;g=V;Y=u(Y,X,W,V,C[P+0],S,3614090360);V=u(V,Y,X,W,C[P+1],Q,3905402710);W=u(W,V,Y,X,C[P+2],N,606105819);X=u(X,W,V,Y,C[P+3],M,3250441966);Y=u(Y,X,W,V,C[P+4],S,4118548399);V=u(V,Y,X,W,C[P+5],Q,1200080426);W=u(W,V,Y,X,C[P+6],N,2821735955);X=u(X,W,V,Y,C[P+7],M,4249261313);Y=u(Y,X,W,V,C[P+8],S,1770035416);V=u(V,Y,X,W,C[P+9],Q,2336552879);W=u(W,V,Y,X,C[P+10],N,4294925233);X=u(X,W,V,Y,C[P+11],M,2304563134);Y=u(Y,X,W,V,C[P+12],S,1804603682);V=u(V,Y,X,W,C[P+13],Q,4254626195);W=u(W,V,Y,X,C[P+14],N,2792965006);X=u(X,W,V,Y,C[P+15],M,1236535329);Y=f(Y,X,W,V,C[P+1],A,4129170786);V=f(V,Y,X,W,C[P+6],z,3225465664);W=f(W,V,Y,X,C[P+11],y,643717713);X=f(X,W,V,Y,C[P+0],w,3921069994);Y=f(Y,X,W,V,C[P+5],A,3593408605);V=f(V,Y,X,W,C[P+10],z,38016083);W=f(W,V,Y,X,C[P+15],y,3634488961);X=f(X,W,V,Y,C[P+4],w,3889429448);Y=f(Y,X,W,V,C[P+9],A,568446438);V=f(V,Y,X,W,C[P+14],z,3275163606);W=f(W,V,Y,X,C[P+3],y,4107603335);X=f(X,W,V,Y,C[P+8],w,1163531501);Y=f(Y,X,W,V,C[P+13],A,2850285829);V=f(V,Y,X,W,C[P+2],z,4243563512);W=f(W,V,Y,X,C[P+7],y,1735328473);X=f(X,W,V,Y,C[P+12],w,2368359562);Y=D(Y,X,W,V,C[P+5],o,4294588738);V=D(V,Y,X,W,C[P+8],m,2272392833);W=D(W,V,Y,X,C[P+11],l,1839030562);X=D(X,W,V,Y,C[P+14],j,4259657740);Y=D(Y,X,W,V,C[P+1],o,2763975236);V=D(V,Y,X,W,C[P+4],m,1272893353);W=D(W,V,Y,X,C[P+7],l,4139469664);X=D(X,W,V,Y,C[P+10],j,3200236656);Y=D(Y,X,W,V,C[P+13],o,681279174);V=D(V,Y,X,W,C[P+0],m,3936430074);W=D(W,V,Y,X,C[P+3],l,3572445317);X=D(X,W,V,Y,C[P+6],j,76029189);Y=D(Y,X,W,V,C[P+9],o,3654602809);V=D(V,Y,X,W,C[P+12],m,3873151461);W=D(W,V,Y,X,C[P+15],l,530742520);X=D(X,W,V,Y,C[P+2],j,3299628645);Y=t(Y,X,W,V,C[P+0],U,4096336452);V=t(V,Y,X,W,C[P+7],T,1126891415);W=t(W,V,Y,X,C[P+14],R,2878612391);X=t(X,W,V,Y,C[P+5],O,4237533241);Y=t(Y,X,W,V,C[P+12],U,1700485571);V=t(V,Y,X,W,C[P+3],T,2399980690);W=t(W,V,Y,X,C[P+10],R,4293915773);X=t(X,W,V,Y,C[P+1],O,2240044497);Y=t(Y,X,W,V,C[P+8],U,1873313359);V=t(V,Y,X,W,C[P+15],T,4264355552);W=t(W,V,Y,X,C[P+6],R,2734768916);X=t(X,W,V,Y,C[P+13],O,1309151649);Y=t(Y,X,W,V,C[P+4],U,4149444226);V=t(V,Y,X,W,C[P+11],T,3174756917);W=t(W,V,Y,X,C[P+2],R,718787259);X=t(X,W,V,Y,C[P+9],O,3951481745);Y=K(Y,h);X=K(X,E);W=K(W,v);V=K(V,g)}var i=B(Y)+B(X)+B(W)+B(V);return i.toLowerCase()};
/* static/js/angularForage.js */
(function(){function getItem($scope,key,callback){localForage.getItem(key,function(v){$scope.$apply(function(){callback(v)})})}function setItem($scope,key,value,callback){localForage.setItem(key,value,function(){if(callback)$scope.$apply(callback)})}function removeItem($scope,key,callback){localForage.removeItem(key,function(){if(callback)$scope.$apply(callback)})}function clear($scope,callback){localForage.clear(function(v){if(callback)$scope.$apply(callback)})}function length($scope,callback){localForage.length(function(v){$scope.$apply(function(){callback(v)})})}function key($scope,n,callback){localForage.key(n,function(v){$scope.$apply(function(){callback(v)})})}var angularForage={getItem:getItem,setItem:setItem,removeItem:removeItem,clear:clear,length:length,key:key};if(typeof define==="function"&&define.amd){define(function(){return angularForage})}else if(typeof module!=="undefined"&&module.exports){module.exports=angularForage}else{this.angularForage=angularForage}}).call(this);
/* static/js/utils.js */
function get_gravatar(email,size,secure){secure=secure||false;size=size||80;var base;if(secure)base="https://secure.gravatar.com/";else base="http://www.gravatar.com/";return base+"avatar/"+MD5(email)+".jpg?s="+size}var serializeObject=function(obj){var str=[];for(var p in obj)if(obj.hasOwnProperty(p)){str.push(encodeURIComponent(p)+"="+encodeURIComponent(obj[p]))}return str.join("&")};function isAllDigits(x){return!x.match(/[^\d]/)}function escapeRegExp(string){return string.replace(/([.*+?^=!:${}()|\[\]\/\\])/g,"\\$1")}
/* static/js/buggy.js */
if(typeof DEBUG==="undefined")DEBUG=false;var BUGZILLA_URL="https://bugzilla.mozilla.org/rest/";var WEBSOCKET_URL="ws://bugzfeed.mozilla.org/";var MAX_BACKGROUND_DOWNLOADS=10;var FETCH_NEW_BUGS_FREQUENCY=3*60;var FETCH_CHANGED_BUGS_FREQUENCY=3*60+1;if(DEBUG){FETCH_NEW_BUGS_FREQUENCY*=5;FETCH_CHANGED_BUGS_FREQUENCY*=5;console.warn("NB! In DEBUG mode")}var BUGZFEED_RECONNECT_FREQUENCY=60;var CLEAN_LOCAL_STORAGE_FREQUENCY=120;var CLEAR_POST_QUEUE_FREQUENCY=10;var _INCLUDE_FIELDS="assigned_to,assigned_to_detail,product,component,creator,creator_detail,status,id,resolution,last_change_time,creation_time,summary";var _ALL_POSSIBLE_STATUSES="UNCONFIRMED,NEW,ASSIGNED,REOPENED,RESOLVED,VERIFIED,CLOSED".split(",");var _ATTACHMENT_INCLUDE_FIELDS="id,summary,size,content_type,is_obsolete,creation_time,is_patch";var app=angular.module("buggyApp",["ngSanitize"]);app.filter("stringArraySort",function(){return function(input){return input.sort()}});app.directive("keybinding",function(){return{restrict:"E",scope:{invoke:"&"},link:function(scope,el,attr){Mousetrap.bind(attr.on,scope.invoke)}}});app.factory("bugzfeed",["$rootScope",function($rootScope){var service={};service.send_soon=[];service.connected=false;service.disconnect=function(){service.ws.close();service.connected=false};service.reconnect=function(){console.log("trying to reconnect",service.ws.readyState);if(service.ws.readyState!==service.ws.OPEN){service.ws.close();delete service.ws}setTimeout(function(){$rootScope.$apply(function(){service.connect()})},100)};service.connect=function(){if(service.ws){return}var ws=new WebSocket(WEBSOCKET_URL);ws.onopen=function(){service.onOpen();service.connected=true;_.each(service.send_soon,function(message){service.send(message)})};ws.onerror=function(event){service.onError(event)};ws.onclose=function(){service.onClose();service.connected=false};ws.onmessage=function(message){service.onMessage(message);var data=message.data;try{data=JSON.parse(data)}catch(exception){console.warn(data,"is not a JSON string")}if(data.command){if(data.command==="version"){service.onVersion(data.version)}else if(data.command==="update"){service.onUpdate(data.bug)}else if(data.command==="subscribe"||data.command==="unsubscribe"){service.onSubscription(data.bugs)}else{console.warn("Unrecognized command",data.command)}}else{console.warn("No command",data)}};service.ws=ws};function _toBugIds(bugs){var bug_ids=[];if(_.isNumber(bugs)){bug_ids.push(bugs)}else if(_.isString(bugs)){bug_ids.push(parseInt(bugs))}else if(_.isArray(bugs)){_.each(bugs,function(bug){if(_.isNumber(bug)){bug_ids.push(bug)}else if(_.isString(bug)){bug_ids.push(parseInt(bug))}else{bug_ids.push(bug.id)}})}else{bug_ids=[bugs.id]}return bug_ids}service.send=function(message){if(service.connected){if(_.isObject(message)){message=JSON.stringify(message)}service.ws.send(message)}else{service.send_soon.push(message)}};service.addSubscription=function(bugs){service.send({command:"subscribe",bugs:_toBugIds(bugs)})};service.removeSubscription=function(bugs){service.send({command:"unsubscribe",bugs:_toBugIds(bugs)})};service.onVersion=function(){};service.onMessage=function(){};service.onClose=function(){};service.onUpdate=function(){};service.onSubscription=function(){};service.onError=function(event){console.error("Error on websocket",event)};return service}]);app.controller("BugsController",["$scope","$timeout","$http","$interval","$location","bugzfeed",function BugsController($scope,$timeout,$http,$interval,$location,bugzfeed){"use strict";$scope.bugzfeed_connected=false;$scope.bugzfeed_version=null;bugzfeed.connect();bugzfeed.onOpen=function(){console.log("onopen finished");$scope.bugzfeed_connected=true};bugzfeed.onClose=function(){console.warn("bugzfeed connection closed",arguments);$scope.bugzfeed_connected=false};bugzfeed.onVersion=function(version){$scope.bugzfeed_version=version};bugzfeed.onSubscription=function(bugs){if(bugs.length<10){console.log("Now subscribed to",bugs.join(", "))}else{console.log("Now subscribed to",bugs.slice(0,10).join(", "),"... (and "+(bugs.length-10)+" more)")}if(bugs.length>$scope.bugs.length){console.warn("Subscribed to "+(bugs.length-$scope.bugs.length)+" too many bugs");var active_bug_ids=_.map($scope.bugs,function(bug){return bug.id});var excess=_.filter(bugs,function(bug){return!_.contains(active_bug_ids,bug)});if(excess.length){console.warn("unsubscribing from "+excess.length+" excess bugs");bugzfeed.removeSubscription(excess)}}};bugzfeed.onUpdate=function(bug_id){setGeneralNotice("1 bug updated.");if($scope.bug.id===bug_id){$scope.refreshBug($scope.bug)}_.each($scope.bugs,function(bug){if(bug.id===bug_id){bug.is_changed=true;$scope.refreshBug(bug)}})};bugzfeed.send({command:"version"});$scope.$watch("is_offline",function(value){if(value===null)return;if(value){$scope.bugzfeed_connected=false;bugzfeed.disconnect()}else{if(!bugzfeed.connected){bugzfeed.reconnect()}}});$interval(function(){if(!bugzfeed.connected){console.warn("Was not connected to bugzfeed. Trying to reconnect...");bugzfeed.reconnect()}},BUGZFEED_RECONNECT_FREQUENCY*1e3);var _inprogress_refreshing=false;$scope.bugs=[];$scope.in_config=false;$scope.in_about=false;$scope.in_charts=false;$scope.email="";$scope.auth_token=null;$scope.is_offline=null;$scope.all_possible_statuses=_ALL_POSSIBLE_STATUSES;$scope.selected_statuses=[];angularForage.getItem($scope,"selected_statuses",function(value){if(value!==null){$scope.selected_statuses=value}});$scope.product_filters=[];angularForage.getItem($scope,"product_filters",function(value){if(value){$scope.product_filters=value}});angularForage.getItem($scope,"auth_token",function(value){if(value){$scope.auth_token=value}});angularForage.getItem($scope,"email",function(value){if(value){$scope.email=value}});$scope.products=[];$scope.play_sounds=true;angularForage.getItem($scope,"play_sounds",function(value){if(value!==null)$scope.play_sounds=value});$scope.email_to_name={};angularForage.getItem($scope,"email_to_name",function(value){if(value!==null){$scope.email_to_name=value}});$scope.extra_include_fields=["groups","blocks","depends_on"];angularForage.getItem($scope,"extra_include_fields",function(value){if(value!==null){$scope.extra_include_fields=value}});$scope.config_stats={data_downloaded_human:"",total_data_downloaded_human:"",total_comments:0};$scope.data_downloaded=0;$scope.total_data_downloaded=0;angularForage.getItem($scope,"total_data_downloaded",function(value){if(value!==null){$scope.total_data_downloaded=value}});function logDataDownloaded(data){var amount=JSON.stringify(data).length;$scope.data_downloaded+=amount;$scope.total_data_downloaded+=amount;localForage.setItem("total_data_downloaded",$scope.total_data_downloaded)}$scope.loading=null;function startLoading(msg){$scope.loading={message:msg}}function stopLoading(){$scope.loading=null}$scope.error_notice=null;function setErrorNotice(msg,options){options=options||{};var delay=options.delay||10;$scope.error_notice=msg;$timeout(function(){$scope.error_notice=null},delay*1e3)}var original_document_title=document.title;$scope.general_notice=null;function setGeneralNotice(msg,options){options=options||{};var delay=options.delay||10;$scope.general_notice=msg;document.title=msg;$timeout(function(){$scope.general_notice=null;document.title=original_document_title},delay*1e3)}$scope.filterByStatus=function(status){if(status==="ALL"){$scope.selected_statuses=[]}else if(_.contains($scope.selected_statuses,status)){$scope.selected_statuses=_.filter($scope.selected_statuses,function(s){return s!==status})}else{$scope.selected_statuses.push(status)}localForage.setItem("selected_statuses",$scope.selected_statuses)};$scope.isSelectedStatus=function(status){return _.contains($scope.selected_statuses,status)};$scope.countByStatus=function(status){return $scope.counts_by_status[status]||0};$scope.counts_by_status={UNREAD:0,ASSIGNED_TO:0,CHANGED:0};function reCountBugsByStatus(bugs){if(!bugs)return;$scope.counts_by_status={UNREAD:0,ASSIGNED_TO:0,CHANGED:0,ALL:bugs.length};_.each(bugs,function(bug){if($scope.email==bug.assigned_to){$scope.counts_by_status.ASSIGNED_TO++}if(bug.unread){$scope.counts_by_status.UNREAD++}if(bug.is_changed){$scope.counts_by_status.CHANGED++}$scope.counts_by_status[bug.status]=1+($scope.counts_by_status[bug.status]||0)})}$scope.toggleConfig=function(){if(!$scope.in_config){$scope.config_stats.total_bugs=$scope.bugs.length;$scope.config_stats.data_downloaded_human=filesize($scope.data_downloaded);$scope.config_stats.total_data_downloaded_human=filesize($scope.total_data_downloaded);countTotalComments();precalculateProductCounts();startSelectProducts()}$scope.in_config=!$scope.in_config};$scope.toggleAbout=function(){if($scope.in_config&&!$scope.in_about){$scope.in_config=false}$scope.in_about=!$scope.in_about};$scope.toggleCharts=function(){if(!$scope.in_charts){if($scope.in_config){$scope.in_config=false}if($scope.in_about){$scope.in_about=false}console.log("Opening charts")}$scope.in_charts=!$scope.in_charts};function fetchAuthToken(params){var url=BUGZILLA_URL+"login";url+="?"+serializeObject(params);return $http.get(url)}function fetchBugs(params){if($scope.auth_token){params.token=$scope.auth_token}var url=BUGZILLA_URL+"bug";url+="?"+serializeObject(params);return $http.get(url)}function fetchConfiguration(params){var url=BUGZILLA_URL+"product";url+="?"+serializeObject(params);return $http.get(url)}function lastChangeTimeSorter(bug){return bug.last_change_time}function pySplit(str,sep,num){var pieces=str.split(sep);if(arguments.length<3){return pieces}if(pieces.length<num){return pieces}return pieces.slice(0,num).concat(pieces.slice(num).join(sep))}function fetchAndUpdateBugs(callback){var _products_left=$scope.products.length;var bug_ids=[];$scope.bugs=[];_.each($scope.products,function(product_combo,index){var params={include_fields:_INCLUDE_FIELDS};var combo=pySplit(product_combo,"::",1);params.product=combo[0].trim();params.component=combo[1].trim();fetchBugs(params).success(function(data,status,headers,config){$scope.is_offline=false;logDataDownloaded(data);_products_left--;var _bugs_left=data.bugs.length;_.each(data.bugs,function(bug,index){bug_ids.push(bug.id);localForage.getItem(bug.id,function(existing_bug){_bugs_left--;if(existing_bug!==null){bug.comments=existing_bug.comments;bug.extract=existing_bug.extract;bug.last_actor=existing_bug.last_actor}localForage.setItem(bug.id,bug);$scope.bugs.push(bug);if(!_bugs_left&&!_products_left){console.log("Storing a list of ",bug_ids.length,"bugs");localForage.setItem("bugs",bug_ids);reCountBugsByStatus($scope.bugs);bugzfeed.addSubscription($scope.bugs);$scope.$apply();if(callback){$scope.$apply(callback)}}})})}).error(function(data,status,headers,config){console.warn("Failure to fetchBugs");console.log("status",status);if(status===0)$scope.is_offline=true})})}var fetch_soon_promise;$scope.fetch_soon_bugs=[];function fetchAndUpdateBugsByIdSoon(bug,how_soon,how_many_max){how_soon=how_soon||2;how_many_max=how_many_max||10;if(bug){$scope.fetch_soon_bugs.push(bug)}if($scope.fetch_soon_bugs.length>=how_many_max){var copy=$scope.fetch_soon_bugs.slice(0);$scope.fetch_soon_bugs=[];fetchAndUpdateBugsById(copy,function(){console.log("Have fetched and updated",copy)})}else{if(fetch_soon_promise){$timeout.cancel(fetch_soon_promise)}fetch_soon_promise=$timeout(function(){var copy=$scope.fetch_soon_bugs.slice(0);$scope.fetch_soon_bugs=[];fetchAndUpdateBugsById(copy,function(){console.log("Have fetched and updated",copy)})},how_soon*1e3)}}function fetchAndUpdateBugsById(bugs,callback){var bug_ids=[];if(_.isNumber(bugs)){bug_ids=[bugs]}else if(_.isArray(bugs)){_.each(bugs,function(bug){if(_.isNumber(bug)){bug_ids.push(bug)}else{bug_ids.push(bug.id)}})}else{bug_ids=[bugs.id]}var include_fields=_INCLUDE_FIELDS;if($scope.extra_include_fields){include_fields+=","+$scope.extra_include_fields.join(",")}fetchBugs({id:bug_ids.join(","),include_fields:include_fields}).success(function(data,status,headers,config){$scope.is_offline=false;logDataDownloaded(data);if(data.bugs&&data.bugs.length){_.each(data.bugs,function(new_bug){var was_replaced=false;_.each($scope.bugs,function(old_bug,index){if(old_bug.id===new_bug.id){was_replaced=true;new_bug.comments=old_bug.comments;new_bug.extract=old_bug.extract;new_bug.last_actor=old_bug.last_actor;new_bug.history=old_bug.history;new_bug.unread=old_bug.unread;$scope.bugs[index]=new_bug;if(new_bug.id===$scope.bug.id){$scope.bug=new_bug;$scope.bug.things=$scope.getThings($scope.bug)}}});if(!was_replaced){$scope.bugs.push(new_bug)}localForage.setItem(new_bug.id,new_bug)});reCountBugsByStatus($scope.bugs)}if(callback)callback()}).error(function(data,status,headers,config){console.warn("Failure to fetchBugs");console.log("status",status);if(status===0)$scope.is_offline=true})}function fetchComments(id,params){params=params||{};if($scope.auth_token){params.token=$scope.auth_token}var url=BUGZILLA_URL+"bug/"+id+"/comment";url+="?"+serializeObject(params);return $http.get(url)}function makeCommentExtract(comment,max_length){max_length=max_length||75;if(comment.text.length>max_length){return comment.text.substring(0,max_length-1)+"…"}return comment.text}function fetchAndUpdateComments(bug,callback){fetchComments(bug.id).success(function(data,status,headers,config){if(data.error){if(data.code===32e3){if($scope.auth_token){$scope.auth_token=null;alert("Your token has expired. You have to sign in again.");localForage.removeItem("auth_token");if(callback)callback();return}}}$scope.is_offline=false;logDataDownloaded(data);if(data.bugs&&data.bugs[bug.id]){bug.comments=data.bugs[bug.id].comments;if(bug.comments.length){bug.extract=makeCommentExtract(_.last(bug.comments));if(bug.comments.length>1){bug.last_actor=_.last(bug.comments).creator}}_.each($scope.bugs,function(list_bug,index){if(list_bug.id===bug.id){$scope.bugs[index]=bug}});reCountBugsByStatus($scope.bugs);localForage.setItem(bug.id,bug)}else{console.warn("No 'bugs' in data",data);if(data.error&&data.code===102){console.warn("Forgetting bug ",bug.id);localForage.removeItem(id,function(){localForage.getItem("bugs",function(v){v=_.filter(v,function(x){return x!==id});localForage.setItem("bugs",v,function(){console.log("Removed bug "+id)})})})}}if(callback)callback()}).error(function(data,status,headers,config){console.warn("Failure to fetchComments");if(status===0){$scope.is_offline=true}else{setErrorNotice("Network trouble. Unable to fetch the bug comments.")}console.log("status",status);if(callback)callback()})}function fetchHistory(id,params){params=params||{};if($scope.auth_token){params.token=$scope.auth_token}var url=BUGZILLA_URL+"bug/"+id+"/history";url+="?"+serializeObject(params);return $http.get(url)}function fetchAttachments(id,params){params=params||{};if($scope.auth_token){params.token=$scope.auth_token}var url=BUGZILLA_URL+"bug/"+id+"/attachment";url+="?"+serializeObject(params);return $http.get(url)}function fetchAndUpdateHistory(bug,callback){fetchHistory(bug.id).success(function(data,status,headers,config){$scope.is_offline=false;logDataDownloaded(data);_.each(data.bugs,function(bug_history){if(bug_history.id===bug.id){bug.history=bug_history.history}});_.each($scope.bugs,function(list_bug,index){if(list_bug.id===bug.id){$scope.bugs[index]=bug}});localForage.setItem(bug.id,bug);if(callback)callback()}).error(function(data,status,headers,config){console.warn("Failure to fetchAndUpdateHistory");if(status===0){$scope.is_offline=true}else{setErrorNotice("Network trouble. Unable to fetch the bug comments.")}console.log("status",status);if(callback)callback()})}function fetchAndUpdateAttachments(bug,callback){fetchAttachments(bug.id,{include_fields:_ATTACHMENT_INCLUDE_FIELDS}).success(function(data,status,headers){$scope.is_offline=false;logDataDownloaded(data);var attachments=[];if(data.bugs&&data.bugs[bug.id]){_.each(data.bugs[bug.id],function(attachment){if(attachment.is_obsolete)return;attachments.push(attachment)});if(attachments.length){bug.attachments=attachments;localForage.setItem(bug.id,bug)}}if(callback)callback()}).error(function(data,status){if(status===0)$scope.is_offline=true})}function loadProducts(){angularForage.getItem($scope,"products",function(value){if(value&&value.length){$scope.products=value}})}loadProducts();function loadBugs(callback){localForage.getItem("bugs",function(value){if(value){console.log("Found",value.length,"bug ids");var _bugs_left=value.length;_.each(value,function(id,index){localForage.getItem(id,function(bug){_bugs_left--;if(bug){$scope.bugs.push(bug)}else{console.warn("No bug data on",id);fetchAndUpdateBugsByIdSoon(id)}if(!_bugs_left){countBugsWithComments();reCountBugsByStatus($scope.bugs);$scope.$apply();console.log("Done loading bugs. Start downloading some comments.");bugzfeed.addSubscription($scope.bugs);downloadSomeComments();if(callback)callback()}})})}else{if($scope.products.length){startLoading("Feching bugs");console.log("Start fetchAndUpdateBugs()");fetchAndUpdateBugs(function(){stopLoading();countBugsWithComments();reCountBugsByStatus($scope.bugs);$scope.$apply();bugzfeed.addSubscription($scope.bugs);downloadSomeComments();if(callback)callback()})}}})}angularForage.getItem($scope,"products",function(value){if(value){$scope.products=value;showCloakDialog("Loading bugs from local storage...");loadBugs(function(){localForage.getItem("selected_bug",function(id){if(id){angularForage.getItem($scope,id,function(bug){if(bug){$scope.selectBug(bug)}else{console.warn("selected_bug not available")}})}});precalculateProductCounts();closeCloakDialog()})}else{console.warn("No previously stored products");closeCloakDialog()}});var _downloaded_comments=0;function downloadSomeComments(){if(_downloaded_comments>MAX_BACKGROUND_DOWNLOADS){countBugsWithComments();countTotalComments();stopLoading();$timeout(function(){_downloaded_comments=0;downloadSomeComments()},60*1e3);return}var _downloading=false;_.each(_.sortBy($scope.bugs,lastChangeTimeSorter).reverse(),function(bug,index){if(!_downloading&&!bug.comments){_downloading=true;_downloaded_comments++;console.log("FETCH",bug.id);startLoading("Fetching comments");fetchAndUpdateComments(bug,downloadSomeComments)}});if(!_downloading){stopLoading()}}$scope.reDownloadSomeComments=function(){console.log("reDownloadSomeComments",_downloaded_comments,MAX_BACKGROUND_DOWNLOADS);if(_downloaded_comments>MAX_BACKGROUND_DOWNLOADS){_downloaded_comments=0;MAX_BACKGROUND_DOWNLOADS=parseInt(MAX_BACKGROUND_DOWNLOADS*1.5);if(MAX_BACKGROUND_DOWNLOADS>30){MAX_BACKGROUND_DOWNLOADS=30}}downloadSomeComments()};$scope.bug={empty:true};var start_updating_comments_timer=null;$scope.selectBug=function(bug){if(bug.creator_detail&&bug.creator_detail.email&&bug.creator_detail.real_name){$scope.email_to_name[bug.creator_detail.email]=bug.creator_detail.real_name;localForage.setItem("email_to_name",$scope.email_to_name)}if(bug.unread){$scope.counts_by_status.UNREAD--}if(bug.is_changed){$scope.counts_by_status.CHANGED--}$scope.in_config=false;$scope.in_about=false;$scope.in_charts=false;bug.empty=false;bug.unread=false;bug.is_changed=false;localForage.setItem(bug.id,bug);localForage.setItem("selected_bug",bug.id);bug.things=$scope.getThings(bug);if(start_updating_comments_timer){$timeout.cancel(start_updating_comments_timer)}start_updating_comments_timer=$timeout(function(){console.log("Fetching comments for ",bug.id);fetchAndUpdateComments(bug,function(){bug.things=$scope.getThings(bug);fetchAndUpdateHistory(bug,function(){bug.things=$scope.getThings(bug);fetchAndUpdateBugsById(bug);fetchAndUpdateAttachments(bug,function(){bug.things=$scope.getThings(bug)})})})},1e3);$scope.bug=bug};$scope.isSelectedBug=function(bug){return bug.id==$scope.bug.id};var _gravatar_cache={};$scope.avatarURL=function(email,size){size=size||64;var secure=document.location.protocol==="https:";if(email==="mozilla+bugcloser@davedash.com"){return"static/images/bugzilla-icon.png"}var cache_key=email+size+secure;var url=_gravatar_cache[cache_key];if(!url){url=get_gravatar(email,size,secure);_gravatar_cache[cache_key]=url}return url};$scope.isEmail=function(text){if(!text)return false;return text.match(/@/)&&!text.match(/\s/)};$scope.nameOrEmail=function(email){return $scope.email_to_name[email]||email};$scope.displayTimeAgo=function(ts){return moment(ts).fromNow()};$scope.clearLocalStorage=function(){localForage.clear(function(){document.location.reload()})};var more_to_clean=false;$scope.cleanLocalStorage=function(){cleanLocalStorage({max:200})};function cleanLocalStorage(options,callback){if(_.isFunction(options)){callback=options;options={}}else{options=options||{}}var MAX=options.max||30;localForage.getItem("bugs",function(bug_ids){localForage.length(function(L){_.each(_.sample(_.range(L),MAX),function(idx,count){localForage.key(idx,function(K){if(isAllDigits(""+K)){if(!_.contains(bug_ids,K)){localForage.removeItem(K,function(){console.log("Cleaned up bug",K)})}}if(count+1===MAX&&callback){$scope.$apply(callback)}})})})})}$interval(function(){if(!_inprogress_refreshing){console.log("Runing cleanLocalStorage()");cleanLocalStorage()}},CLEAN_LOCAL_STORAGE_FREQUENCY*1e3);$scope.makeBugzillaLink=function(id,comment_index){return"https://bugzilla.mozilla.org/show_bug.cgi?id="+id};$scope.makeBugzillaAttachmentLink=function(id){return"https://bugzilla.mozilla.org/attachment.cgi?id="+id};$scope.makeBugzillaAttachmentReviewLink=function(bug_id,attachment_id){return"https://bugzilla.mozilla.org/page.cgi?id=splinter.html&bug="+bug_id+"&attachment="+attachment_id};$scope.showFileSize=function(bytes){return filesize(bytes)};$scope.refreshBugs=function(){console.log("Start refreshing bugs");$scope.products_changed=false;startLoading("Refreshing bug list");_inprogress_refreshing=true;fetchAndUpdateBugs(function(){stopLoading();precalculateProductCounts();_inprogress_refreshing=false})};$scope.refreshBug=function(bug){startLoading("Refreshing bug and its comments");fetchAndUpdateBugsById(bug,function(){fetchAndUpdateComments(bug,function(){bug.things=$scope.getThings(bug);fetchAndUpdateHistory(bug,function(){bug.things=$scope.getThings(bug);fetchAndUpdateAttachments(bug,function(){bug.things=$scope.getThings(bug);stopLoading()})})})})};$scope.loadMore=function(){$scope.list_limit*=2;console.log("Limit to",$scope.list_limit);_downloaded_comments=0;console.log("in loadMore()");downloadSomeComments()};$scope.canLoadMore=function(){return $scope.bugs.length>$scope.list_limit};$scope.found_products=[];function findProductsByEmail(email,callback,error_callback){var params={include_fields:"product,component",assigned_to:email};fetchBugs(params).success(function(data,status,headers,config){$scope.is_offline=false;_.each(data.bugs,function(bug){var combo=bug.product+" :: "+bug.component;if(!_.contains($scope.found_products,combo)){$scope.found_products.push(combo)}});$timeout(function(){$scope.found_products=[]},60*1e3);if(callback)callback()}).error(function(data,status,headers,config){console.warn("Failure to fetchBugs");console.log("status",status);if(status===0)$scope.is_offline=true;if(error_callback)error_callback()})}$scope.removeProduct=function(combo){$scope.products=_.filter($scope.products,function(p){return p!==combo});localForage.setItem("products",$scope.products);$scope.products_changed=true;cleanLocalStorage()};$scope.searchProductsByEmail=function(){if(this.email&&this.email.trim()){startLoading("Finding Products & Components");findProductsByEmail(this.email,function(){stopLoading()},function(){stopLoading()})}};$scope.addProduct=function(){if(!this.product_choice)return;_.each(this.product_choice,function(product_choice){console.log("PRODUCT_CHOICE",product_choice);if(product_choice.search(/ :: /)==-1){var start=product_choice+" :: ";_.each($scope.product_choices,function(e){if(e.substring(0,start.length)==start){if(!_.contains($scope.products,e)){$scope.products.push(e)}}})}else{if(!_.contains($scope.products,product_choice)){$scope.products.push(product_choice)}}});localForage.setItem("products",$scope.products);$scope.products_changed=true;$scope.search_products=""};$scope.addProductCombo=function(combo){if(!_.contains($scope.products,combo)){$scope.products.push(combo);if(_.contains($scope.found_products,combo)){$scope.found_products=_.filter($scope.found_products,function(c){return c!==combo})}$scope.products_changed=true}};var _downloading_configuration=false;$scope.product_choices=["Be patient. It takes a while to download all options."];$scope.product_choice=null;function _downloadConfiguration(){startLoading("Downloading all possible Products & Components");var params={type:"accessible",include_fields:"name,components.name"};fetchConfiguration(params).success(function(data){stopLoading();$scope.product_choices=[];var all=[];_.each(data.products,function(p){all.push(p.name);_.each(p.components,function(c){all.push(p.name+" :: "+c.name)})});all.sort();localForage.setItem("all_product_choices",all,function(){var one_day=(new Date).getTime()+60*60*24*1e3;localForage.setItem("all_product_choices_expires",one_day)});$scope.product_choices=all}).error(function(){console.warn("Unable to download configuration")})}function startSelectProducts(){if(_downloading_configuration)return;_downloading_configuration=true;localForage.getItem("all_product_choices",function(all_product_choices){if(all_product_choices){angularForage.getItem($scope,"all_product_choices_expires",function(expires){if(expires){var now=(new Date).getTime();if(now<expires){$scope.product_choices=all_product_choices}else{_downloadConfiguration()}}else{_downloadConfiguration()}})}else{_downloadConfiguration()}})}var products_counts={};$scope.countBugsByProduct=function(product_combo){if(typeof products_counts[product_combo]==="undefined"){return"??"}return products_counts[product_combo]};function precalculateProductCounts(){_.each($scope.products,function(product_combo){var product,component;if(product_combo.split("::").length>=2){var combo=pySplit(product_combo,"::",1);product=combo[0].trim();component=combo[1].trim()}else{product=product_combo.trim()}var count=0;_.each($scope.bugs,function(bug){if(product===bug.product){if(!component||component&&component===bug.component){count++}}});products_counts[product_combo]=count})}$scope.count_bugs_with_comments=0;function countBugsWithComments(){var count=0;_.each($scope.bugs,function(bug){if(bug.comments&&bug.comments.length)count++});$scope.count_bugs_with_comments=count}$scope.count_total_comments=0;function countTotalComments(){var total_comments=0;_.each($scope.bugs,function(bug){if(_.isArray(bug.comments)){total_comments+=bug.comments.length}});$scope.count_total_comments=total_comments}$scope.toggleSearch=function(){if(!$scope.in_search){setTimeout(function(){document.getElementById("search_q").focus()},100)}$scope.in_search=!$scope.in_search};$scope.getAuthCookie=function(){var email=this.email;var params={login:email,password:this.password};fetchAuthToken(params).success(function(data,status,headers,config){$scope.is_offline=false;if(data.token){$scope.auth_token=data.token;localForage.setItem("auth_token",$scope.auth_token);localForage.setItem("email",email)}else if(data.error){setErrorNotice(data.message);console.warn("Could not log in");console.dir(data)}else{console.warn("Something unexpected");console.dir(data)}}).error(function(data,status,headers,config){console.warn("Failure to fetchAuthToken");if(status===0)$scope.is_offline=true;console.warn("status",status);console.warn("data",data);if(status===401){setErrorNotice("Unable to log in. (Invalid credentials)")}else{setErrorNotice("Unable to log in. (status "+status+")")}})};$scope.getThings=function(bug){var things=[];_.each(bug.comments,function(comment){things.push({time:comment.time,comment:comment,change:null,attachment:null})});_.each(bug.history,function(change){things.push({time:change.when,comment:null,change:change,attachment:null})});_.each(bug.attachments||[],function(attachment){things.push({time:attachment.creation_time,comment:null,change:null,attachment:attachment})});things=_.sortBy(things,"time");return things};var products_creation_times=null;function getProductsLatestCreationTimes(){if(products_creation_times!==null){return products_creation_times}var products={};_.each($scope.bugs,function(bug){if(!products[bug.product])products[bug.product]={};if(!products[bug.product][bug.component]){products[bug.product][bug.component]=bug.creation_time}else if(bug.creation_time>products[bug.product][bug.component]){products[bug.product][bug.component]=bug.creation_time}});return products}$scope.fetchNewBugs=function(){fetchNewBugs(function(){})};function fetchNewBugs(callback){products_creation_times=getProductsLatestCreationTimes();var _products_left=$scope.products.length;var new_bug_ids=[];_.each($scope.products,function(product_combo,index){var params={include_fields:_INCLUDE_FIELDS};var combo=pySplit(product_combo,"::",1);params.product=combo[0].trim();params.component=combo[1].trim();if(!products_creation_times[params.product]){_products_left--;return}if(!products_creation_times[params.product][params.component]){_products_left--;return}params.creation_time=products_creation_times[params.product][params.component];params.creation_time=moment(params.creation_time).add("s",1).format("YYYY-MM-DDTHH:mm:ssZ");fetchBugs(params).success(function(data,status,headers,config){$scope.is_offline=false;logDataDownloaded(data);_products_left--;_.each(data.bugs,function(bug,index){products_creation_times[bug.product][bug.component]=bug.creation_time;var existing_bug=_.findWhere($scope.bugs,{id:bug.id});if(existing_bug){bug.comments=existing_bug.comments;bug.extract=existing_bug.extract;bug.last_actor=existing_bug.last_actor;bug.history=existing_bug.history}else{bug.unread=true;$scope.bugs.push(bug);_downloaded_comments=0;new_bug_ids.push(bug.id)}localForage.setItem(bug.id,bug);bugzfeed.addSubscription(bug);fetchAndUpdateComments(bug)});if(!_products_left){if(new_bug_ids.length){localForage.getItem("bugs",function(value){if(value){_.each(new_bug_ids,function(id){value.push(id)});localForage.setItem("bugs",value)}});if(new_bug_ids.length===1)setGeneralNotice("1 new bug added");else setGeneralNotice(new_bug_ids.length+" new bugs added");playNewBugsSound();reCountBugsByStatus($scope.bugs);downloadSomeComments()}if(callback){callback()}}}).error(function(data,status,headers,config){console.warn("Failure to fetchBugs");if(status===0)$scope.is_offline=true;console.log("status",status)})})}var new_bugs_interval;function startFetchNewBugs(){new_bugs_interval=$interval(function(){if(!_inprogress_refreshing){fetchNewBugs()}else{console.log("NOT fetching new bugs (_inprogress_refreshing)")}},FETCH_NEW_BUGS_FREQUENCY*1e3)}startFetchNewBugs();function getProductsLatestChangeTimes(){var p={};_.each($scope.bugs,function(bug){if(!p[bug.product])p[bug.product]={};if(!p[bug.product][bug.component]){p[bug.product][bug.component]=bug.last_change_time}else if(bug.last_change_time>p[bug.product][bug.component]){p[bug.product][bug.component]=bug.last_change_time}});return p}$scope.fetchNewChanges=function(){fetchNewChanges(function(){})};function fetchNewChanges(callback){var last_change_times=getProductsLatestChangeTimes();var _products_left=$scope.products.length;_.each($scope.products,function(product_combo,index){var params={include_fields:_INCLUDE_FIELDS};var combo=pySplit(product_combo,"::",1);params.product=combo[0].trim();params.component=combo[1].trim();if(!last_change_times[params.product]){_products_left--;return}if(!last_change_times[params.product][params.component]){_products_left--;return}params.last_change_time=last_change_times[params.product][params.component];params.last_change_time=moment(params.last_change_time).add("s",1).format("YYYY-MM-DDTHH:mm:ssZ");var changed_bug_ids=[];fetchBugs(params).success(function(data,status,headers,config){$scope.is_offline=false;logDataDownloaded(data);_products_left--;_.each(data.bugs,function(bug,index){var existing_bug=_.findWhere($scope.bugs,{id:bug.id});if(existing_bug){changed_bug_ids.push(bug.id);bug.comments=existing_bug.comments;bug.extract=existing_bug.extract;bug.last_actor=existing_bug.last_actor;bug.history=existing_bug.history;bug.unread=existing_bug.unread;bug.is_changed=true;localForage.setItem(bug.id,bug);_.each($scope.bugs,function(old_bug,index){if(old_bug.id===bug.id){$scope.bugs[index]=bug}});if($scope.bug&&$scope.bug.id==bug.id){$scope.bug=bug}fetchAndUpdateComments(bug)}});if(!_products_left){if(changed_bug_ids.length==1)setGeneralNotice("1 bug updated.");else if(changed_bug_ids.length)setGeneralNotice(changed_bug_ids.length+" bugs updated.");if(callback){callback()}}}).error(function(data,status,headers,config){console.warn("Failure to fetchNewChanges");if(status===0)$scope.is_offline=true;console.log("status",status)})})}var changed_bugs_interval;function startFetchNewChanges(){changed_bugs_interval=$interval(function(){if(!_inprogress_refreshing&&!$scope.bugzfeed_connected||$scope.is_offline){fetchNewChanges()}else{console.log("NOT fetching new changes (_inprogress_refreshing)")}},FETCH_CHANGED_BUGS_FREQUENCY*1e3)}startFetchNewChanges();function playNewBugsSound(){if($scope.play_sounds){new Howl({urls:POP_SOUNDS}).play()}}$scope.filterByProduct=function(product){if(product==="ALL"){$scope.product_filters=[]}else if(_.contains($scope.product_filters,product)){$scope.product_filters=_.filter($scope.product_filters,function(s){return s!==product})}else if($scope.product_filters.length===$scope.products.length-1){$scope.product_filters=[]}else{$scope.product_filters.push(product)}localForage.setItem("product_filters",$scope.product_filters)}}]);app.controller("ListController",["$scope","$timeout","$location","$anchorScroll",function($scope,$timeout,$location,$anchorScroll){$scope.search_q_primary="";$scope.search_q="";$scope.in_search=false;$scope.list_limit=100;$scope.show_product_filters=false;$scope.$watchCollection("product_filters",function(){$scope.show_product_filters=false});$scope.toggleShowProductFilters=function(){if(!$scope.show_product_filters){}$scope.show_product_filters=!$scope.show_product_filters};$scope.isSelectedProductFilter=function(product){return _.contains($scope.product_filters,product)};$scope.isFilteredProduct=function(bug){if(!$scope.product_filters.length)return true;var combo=bug.product+" :: "+bug.component;return _.contains($scope.product_filters,combo)};var search_q_timeout=null;var search_q_temp="";$scope.$watch("search_q_primary",function(value){if(search_q_timeout)$timeout.cancel(search_q_timeout);search_q_temp=value;search_q_timeout=$timeout(function(){$scope.search_q=search_q_temp},300)});var search_q_regex;$scope.$watch("search_q",function(value){search_q_regex=new RegExp(escapeRegExp(value),"i")});$scope.filterBySearch=function(bug){if(!$scope.search_q)return true;return search_q_regex.test(bug.summary)||search_q_regex.test(""+bug.id)};$scope.submitSearch=function(){if($scope.search_q_primary!==$scope.search_q){$scope.search_q=$scope.search_q_primary}if($scope.search_q){var found_bugs=_.filter($scope.bugs,$scope.isFilteredProduct);found_bugs=_.filter(found_bugs,$scope.isFilteredStatus);found_bugs=_.filter(found_bugs,$scope.filterBySearch);if(found_bugs.length==1){$scope.selectBug(found_bugs[0]);$scope.search_q=$scope.search_q_primary="";$scope.in_search=false}}};$scope.highlightSearch=function(text){text=(""+text).replace("<","&lt;").replace(">","&gt;");if(!$scope.search_q){if(_.isNumber(text))return""+text;return text}else if(_.isNumber(text)){text=""+text}_.each(search_q_regex.exec(text),function(match){text=text.replace(match,'<span class="match">'+match+"</span>")});return text};$scope.clearSearch=function(){$scope.search_q="";$scope.search_q_primary="";$scope.in_search=false};$scope.isFilteredStatus=function(bug){if(!$scope.selected_statuses.length)return true;if(_.contains($scope.selected_statuses,"CHANGED")&&_.contains($scope.selected_statuses,"CHANGED")){if(bug.is_changed||bug.unread){return true}}if(_.contains($scope.selected_statuses,"CHANGED")){if(!bug.is_changed){return false}else if($scope.selected_statuses.length===1){return true}}if(_.contains($scope.selected_statuses,"UNREAD")){if(!bug.unread){return false}else if($scope.selected_statuses.length===1){return true}}if(_.contains($scope.selected_statuses,bug.status)){if($scope.email&&_.contains($scope.selected_statuses,"ASSIGNED_TO")){return $scope.email==bug.assigned_to}return true}else if(_.contains($scope.selected_statuses,"ASSIGNED_TO")&&$scope.selected_statuses.length===1){return $scope.email==bug.assigned_to}return false};$scope.countAdditionalComments=function(bug){return bug.comments.length-1};$scope.hasAdditionalComments=function(bug){return bug.comments&&bug.comments.length>1};$scope.toId=function(value){return value.replace(/^[0-9]+/,"").replace(/[^a-z0-9]/gi,"")};function getCurrentBuglist(){var bugs=_.filter($scope.bugs,$scope.isFilteredProduct);bugs=_.filter(bugs,$scope.isFilteredStatus);bugs=_.filter(bugs,$scope.filterBySearch);bugs=_.sortBy(bugs,function(item){return item.last_change_time}).reverse();return bugs}$scope.selectNext=function(){var is_next=false;var bugs=getCurrentBuglist();if($scope.bug&&!_.find(bugs,function(bug){return bug.id===$scope.bug.id})){is_next=true}var previous=null;_.each(bugs,function(bug){if(is_next){var hash_to="b";if(previous)hash_to+=previous.id;else hash_to+=bug.id;if(elm=document.getElementById(hash_to))elm.scrollIntoView();$scope.selectBug(bug);is_next=false}else if(bug.id===$scope.bug.id){is_next=true}previous=bug})};$scope.selectPrevious=function(){var previous=null;var bugs=getCurrentBuglist();_.each(bugs,function(bug,i){if(bug.id===$scope.bug.id){if(previous){var hash_to;if(i>2){hash_to="b"+bugs[i-2].id;if(elm=document.getElementById(hash_to))elm.scrollIntoView()}else{hash_to="b"+previous.id;if(elm=document.getElementById(hash_to))elm.scrollIntoView()}$scope.selectBug(previous)}}else{previous=bug}})}}]);app.directive("scrolling",function(){return function(scope,element,attrs){var raw=element[0];var innerHeight=window.innerHeight;var onScroll=function(e){var rect=raw.getBoundingClientRect();var apply=false;if(rect.top<-100){if(!scope.show_sticky){scope.show_sticky=true;apply=true}}else{if(scope.show_sticky){scope.show_sticky=false;apply=true}}if(rect.top+50>=0){if(!scope.at_top){scope.at_top=true;scope.at_bottom=false;apply=true}}else if(rect.bottom-50<=innerHeight){if(!scope.at_bottom){scope.at_top=false;scope.at_bottom=true;apply=true}}else{if(scope.at_top){scope.at_top=false;apply=true}if(scope.at_bottom){scope.at_bottom=false;$apply=true}}if(apply)scope.$apply()};angular.element(window).bind("scroll load",onScroll)}});app.controller("BugController",["$scope","$interval","$http","$timeout",function($scope,$interval,$http,$timeout){$scope.at_top=true;$scope.at_bottom=false;$scope.show_sticky=false;$scope.isAssignedTo=function(bug){return bug.assigned_to&&bug.assigned_to!="nobody@mozilla.org"};$scope.gotoTop=function(){document.getElementById("top").scrollIntoView()};$scope.gotoBottom=function(){document.getElementById("bottom").scrollIntoView()};$scope.openBugMaybe=function(id){var found=false;_.each($scope.bugs,function(bug){if(bug.id===id){found=true;$scope.selectBug(bug)}});if(!found){window.open($scope.makeBugzillaLink(id))}};$scope.changeable_statuses=["CONFIRMED","RESOLVED"];$scope.changeable_resolutions=[];$scope.$watch("bug",function(bug){if(bug.status==="NEW"){$scope.changeable_statuses=["UNCONFIRMED","ASSIGNED","RESOLVED"]}else if(bug.status==="UNCONFIRMED"){$scope.changeable_statuses=["NEW","ASSIGNED","RESOLVED"]}else if(bug.status==="ASSIGNED"){$scope.changeable_statuses=["UNCONFIRMED","NEW","RESOLVED"]}else if(bug.status==="REOPENED"){$scope.changeable_statuses=["UNCONFIRMED","NEW","ASSIGNED","RESOLVED"]}else if(bug.status==="RESOLVED"){$scope.changeable_statuses=["UNCONFIRMED","REOPENED","VERIFIED"]}else if(bug.status==="VERIFIED"){$scope.changeable_statuses=["UNCONFIRMED","REOPENED","RESOLVED"]}$scope.status="Leave as "+bug.status;$scope.changeable_statuses.unshift("Leave as "+bug.status)});$scope.$watch("status",function(status){if(status==="RESOLVED"||status==="VERIFIED"){$scope.resolution="FIXED";$scope.changeable_resolutions=["FIXED","INVALID","WONTFIX","DUPLICATE","WORKSFORME","INCOMPLETE"]}else{$scope.changeable_resolutions=[]}});$scope.post_queue={};angularForage.getItem($scope,"post_queue",function(value){if(value!==null){$scope.post_queue=clearEmptyBugs(value)}});$scope.cancelPost=function(bug_id,_when){$scope.post_queue[bug_id]=_.filter($scope.post_queue[bug_id],function(p){return p._when!==_when})};$scope.submitUpdate=function(){var comment=this.comment||"";var status=this.status||"";var resolution=this.resolution||"";if(status.substring(0,"Leave as ".length)==="Leave as "){status="";resolution=""}if(!status){if(!comment.trim()){return}}var post={comment:comment,status:status,resolution:resolution,_when:new Date};var bug_id=$scope.bug.id;if(!$scope.post_queue[bug_id]){$scope.post_queue[bug_id]=[]}$scope.post_queue[bug_id].push(post);angularForage.setItem($scope,"post_queue",$scope.post_queue,function(){$scope.comment="";$scope.status="Leave as "+$scope.bug.status;$scope.resolution="";if(!_lock_post_queue){_lock_post_queue=true;clearPostQueue(function(){_lock_post_queue=false})}})};function postComment(bug_id,params){if($scope.auth_token){params.token=$scope.auth_token}var url=BUGZILLA_URL+"bug/"+bug_id+"/comment";if(params.id!==bug_id){params.id=bug_id}return $http.post(url,params)}function putUpdate(bug_id,params){if($scope.auth_token){params.token=$scope.auth_token}var url=BUGZILLA_URL+"bug/"+bug_id;if(!params.ids||params.ids&&!_.contains(params.ids,bug_id)){params.ids=[bug_id]}return $http.put(url,params)}var _lock_post_queue=false;function clearPostQueue(callback){var count_bugs=0;_.each($scope.post_queue,function(arr){if(arr.length){count_bugs++}});var original_count_bugs=count_bugs;var params;_.each($scope.post_queue,function(posts,bug_id,index){count_bugs--;var count_posts=posts.length;_.each(posts,function(post){var things_to_do=0;if(post.status)things_to_do++;if(post.comment)things_to_do++;if(post.status){params={ids:[bug_id],status:post.status,resolution:post.resolution};putUpdate(bug_id,params).success(function(data,status){console.log("YAY! PUT WORKED");console.log(data);$scope.is_offline=false;$scope.post_queue[bug_id]=_.filter($scope.post_queue[bug_id],function(p){return p._when!==post._when});if($scope.bug.id===parseInt(bug_id)){$scope.refreshBug($scope.bug)}}).error(function(data,status){console.warn("Unable to put update",data);if(status===0)$scope.is_offline=true}).finally(function(){count_posts--;things_to_do--;if(!things_to_do&&count_posts<=0&&!count_bugs){localForage.setItem("post_queue",$scope.post_queue);if(callback)callback()}})}if(post.comment){params={id:bug_id,comment:post.comment};postComment(bug_id,params).success(function(data,status){$scope.is_offline=false;if(data.error){console.warn("Actually unable to post comment",data);$scope.post_queue[bug_id]=_.map($scope.post_queue[bug_id],function(p){if(p._when===post._when){p._error=data}return p})}else{console.log("YAY! POST COMMENT WORKED");console.log(data);$scope.post_queue[bug_id]=_.filter($scope.post_queue[bug_id],function(p){return p._when!==post._when});if($scope.bug.id===parseInt(bug_id)){$scope.refreshBug($scope.bug)}}}).error(function(data,status){console.warn("Unable to post comment",data);console.warn(status);$scope.post_queue[bug_id]=_.map($scope.post_queue[bug_id],function(p){if(p._when===post._when){p._error=data}return p});if(status===0)$scope.is_offline=true}).finally(function(){count_posts--;things_to_do--;if(!things_to_do&&count_posts<=0&&!count_bugs){localForage.setItem("post_queue",$scope.post_queue);if(callback)callback()}})}})});if(!original_count_bugs&&callback){callback()}}function clearEmptyBugs(post_queue){var new_post_queue={};_.each(post_queue,function(posts,bug_id){if(posts.length){new_post_queue[bug_id]=posts}});return new_post_queue}$scope.getBugPostQueue=function(bug_id){return $scope.post_queue[bug_id]||[]};$interval(function(){if(!_lock_post_queue){_lock_post_queue=true;clearPostQueue(function(){_lock_post_queue=false})}else{console.warn("clear post queue is locked")}},CLEAR_POST_QUEUE_FREQUENCY*1e3)}]);app.controller("ConfigController",["$scope",function($scope){$scope.possible_extra_include_fields=[["groups","Is confidential?"],["depends_on","Depends on"],["blocks","Blocks"],["priority","Priority"],["severity","Severity"],["target_milestone","Target milestone"],["url","URL"]];$scope.chosenExtraIncludeField=function(field){return _.contains($scope.extra_include_fields,field)};$scope.toggleExtraIncludeField=function(field){if(_.contains($scope.extra_include_fields,field)){$scope.extra_include_fields=_.filter($scope.extra_include_fields,function(f){return f!==field})}else{$scope.extra_include_fields.push(field)}localForage.setItem("extra_include_fields",$scope.extra_include_fields)};$scope.clearAuthToken=function(){$scope.auth_token=null;localForage.removeItem("auth_token")};$scope.togglePlaySounds=function(){$scope.play_sounds=!$scope.play_sounds;localForage.setItem("play_sounds",$scope.play_sounds);return false};$scope.searching_products=false;$scope.search_products="";$scope.isFoundProductChoice=function(combo){if(!$scope.search_products.length)return true;var found_match=true;_.each($scope.search_products.trim().split(" "),function(part){if(combo.match(new RegExp("\\b"+escapeRegExp(part),"i"))===null){found_match=false}});return found_match};$scope.highlightProductSearch=function(text){if(!$scope.search_products)return text;_.each($scope.search_products.trim().split(" "),function(part){var regex=new RegExp("\\b"+escapeRegExp(part),"i");_.each(regex.exec(text),function(match){text=text.replace(match,'<span class="match">'+match+"</span>")})});return text}}]);app.controller("ChartsController",["$scope",function($scope){function getChartData(){var statuses={};var any={};var only_product_combos=$scope.products;if($scope.product_filters.length){only_product_combos=$scope.product_filters}var grouping=$scope.number_bugs_charts_group;_.each($scope.bugs,function(bug){var status=bug.status;if(grouping==="simple"){if(_.contains(["UNCONFIRMED","NEW","ASSIGNED","REOPENED"],status)){status="OPEN"}else{status="CLOSED"}}var bucket=statuses[status]||{};var combo=bug.product+" :: "+bug.component;if(!_.contains(only_product_combos,combo))return;any[status]=1;var count=bucket[combo]||0;bucket[combo]=count+1;statuses[status]=bucket});var status_keys=["UNCONFIRMED","NEW","ASSIGNED","REOPENED","RESOLVED","VERIFIED","CLOSED"];if(grouping==="simple"){status_keys=["OPEN","CLOSED"]}else{status_keys=_.filter(status_keys,function(k){return any[k]})}var values=_.map(status_keys,function(status){var bucket=statuses[status];if(typeof bucket==="undefined")bucket={};var vs=_.map(only_product_combos,function(combo){return{x:combo,y:bucket[combo]||0}});return{key:status,values:vs}});return values}function drawChart(){nv.addGraph(function(){var chart=nv.models.multiBarChart().staggerLabels(true).tooltips(true).transitionDuration(100).stacked(true);chart.yAxis.tickFormat(d3.format(",f"));d3.select("#number_bugs_chart svg").datum(getChartData()).call(chart);nv.utils.windowResize(chart.update);return chart})}$scope.$watch("in_charts",function(value){if(value){drawChart()}});$scope.number_bugs_charts_group="all";$scope.$watch("number_bugs_charts_group",drawChart);$scope.$watchCollection("product_filters",drawChart)}]);function forgetBug(id){localForage.removeItem(id,function(){localForage.getItem("bugs",function(v){v=_.filter(v,function(x){return x!==id});localForage.setItem("bugs",v,function(){alert("removed "+id)})})})}function markUnread(id){localForage.getItem(id,function(bug){bug.unread=true;localForage.setItem(id,bug,function(){alert("Done! Reload")})})}
